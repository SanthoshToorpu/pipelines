name: "Download and Load KFP Images"
description: "Download KFP image artifacts and load them into Kind cluster"

runs:
  using: "composite"
  steps:
    - name: Download image artifacts
      uses: actions/download-artifact@v4
      with:
        name: kfp-images
        path: /tmp/kfp-images

    - name: Load images into Kind
      shell: bash
      run: |
        # Make sure the directory exists and list files
        ls -la /tmp/kfp-images/
        
        # Load each image into Kind
        kind load image-archive /tmp/kfp-images/apiserver.tar --name kfp
        kind load image-archive /tmp/kfp-images/persistenceagent.tar --name kfp
        kind load image-archive /tmp/kfp-images/scheduledworkflow.tar --name kfp
        kind load image-archive /tmp/kfp-images/driver.tar --name kfp
        kind load image-archive /tmp/kfp-images/launcher.tar --name kfp
        
        # List images to see actual names
        docker exec kfp-control-plane crictl images
        
        # Create patch file for KFP deployment to match the image names
        cat > /tmp/image-patch.yaml << EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization
        images:
        - name: kind-registry:5000/apiserver
          newName: docker.io/library/apiserver
        - name: kind-registry:5000/persistenceagent
          newName: docker.io/library/persistenceagent
        - name: kind-registry:5000/scheduledworkflow
          newName: docker.io/library/scheduledworkflow
        - name: kind-registry:5000/driver
          newName: docker.io/library/driver
        - name: kind-registry:5000/launcher
          newName: docker.io/library/launcher
        EOF
        
        # Save the patch file for the deploy-kfp action to use
        mkdir -p /tmp/kfp-patches
        cp /tmp/image-patch.yaml /tmp/kfp-patches/
        
        # List the patch file
        echo "Created image patch file:"
        cat /tmp/kfp-patches/image-patch.yaml 