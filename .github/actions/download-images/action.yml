name: "Download and Load KFP Images"
description: "Download KFP image artifacts and load them into Kind cluster"

runs:
  using: "composite"
  steps:
    - name: Download image artifacts
      uses: actions/download-artifact@v4
      with:
        name: kfp-images
        path: /tmp/kfp-images

    - name: Load images into Kind and tag them
      shell: bash
      run: |
        # Make sure the directory exists
        ls -la /tmp/kfp-images/
        
        # Create a registry directory in the kind node
        docker exec kfp-control-plane mkdir -p /var/lib/registry/docker/registry/v2/repositories/kind-registry/
        
        # Load each image into Kind and tag it immediately
        echo "Loading apiserver image..."
        kind load image-archive /tmp/kfp-images/apiserver.tar --name kfp
        docker exec kfp-control-plane crictl pull docker.io/library/apiserver:latest
        docker exec kfp-control-plane crictl tag docker.io/library/apiserver:latest kind-registry:5000/apiserver:latest
        
        echo "Loading persistenceagent image..."
        kind load image-archive /tmp/kfp-images/persistenceagent.tar --name kfp
        docker exec kfp-control-plane crictl pull docker.io/library/persistenceagent:latest
        docker exec kfp-control-plane crictl tag docker.io/library/persistenceagent:latest kind-registry:5000/persistenceagent:latest
        
        echo "Loading scheduledworkflow image..."
        kind load image-archive /tmp/kfp-images/scheduledworkflow.tar --name kfp
        docker exec kfp-control-plane crictl pull docker.io/library/scheduledworkflow:latest
        docker exec kfp-control-plane crictl tag docker.io/library/scheduledworkflow:latest kind-registry:5000/scheduledworkflow:latest
        
        echo "Loading driver image..."
        kind load image-archive /tmp/kfp-images/driver.tar --name kfp
        docker exec kfp-control-plane crictl pull docker.io/library/driver:latest
        docker exec kfp-control-plane crictl tag docker.io/library/driver:latest kind-registry:5000/driver:latest
        
        echo "Loading launcher image..."
        kind load image-archive /tmp/kfp-images/launcher.tar --name kfp
        docker exec kfp-control-plane crictl pull docker.io/library/launcher:latest
        docker exec kfp-control-plane crictl tag docker.io/library/launcher:latest kind-registry:5000/launcher:latest
        
        # Verify images are properly tagged
        echo "Verifying tagged images..."
        docker exec kfp-control-plane crictl images 